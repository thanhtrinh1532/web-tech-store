"use client"

import { useCart } from "../context/CartContext"
import { Link, useNavigate } from "react-router-dom"
import EmptyCart from "../components/EmptyCart"
import ProductRecommendations from "../components/ProductRecommendations"
import "./CartPage.css"

const CartPage = () => {
  const { cart, updateQuantity, removeFromCart, getSubtotal, getShippingFee, getFinalTotal } = useCart()
  const navigate = useNavigate()

  if (cart.items.length === 0) {
    return (
      <div className="cart-page">
        <div className="cart-header">
          <h1>Gi·ªè h√†ng</h1>
          <div className="breadcrumb">
            <Link to="/">Trang ch·ªß</Link> / <span>Gi·ªè h√†ng</span>
          </div>
        </div>
        <EmptyCart />
        <ProductRecommendations />
      </div>
    )
  }

  const handleProceedToCheckout = () => {
    navigate("/checkout")
  }

  return (
    <div className="cart-page">
      <div className="cart-header">
        <h1>Gi·ªè h√†ng</h1>
        <div className="breadcrumb">
          <Link to="/">Trang ch·ªß</Link> / <span>Gi·ªè h√†ng</span>
        </div>
      </div>

      <div className="cart-content">
        <div className="cart-table-container">
          <table className="cart-table">
            <thead>
              <tr>
                <th>S·∫£n ph·∫©m</th>
                <th>Gi√°</th>
                <th>S·ªë l∆∞·ª£ng</th>
                <th>T·∫°m t√≠nh</th>
                <th>Thao t√°c</th>
              </tr>
            </thead>
            <tbody>
              {cart.items.map((item) => (
                <tr key={item.id} className="cart-item-row">
                  <td className="product-info">
                    <div className="product-details">
                      <img
                        src={item.image || "/placeholder.svg?height=80&width=80"}
                        alt={item.name}
                        className="product-image"
                      />
                      <div className="product-text">
                        <h3>{item.name}</h3>
                        <p className="product-sku">SKU: {item.sku || `SP${item.id.toString().padStart(3, "0")}`}</p>
                      </div>
                    </div>
                  </td>
                  <td className="product-price">
                    <span className="price">{item.price.toLocaleString("vi-VN")}‚Ç´</span>
                  </td>
                  <td className="product-quantity">
                    <div className="quantity-controls">
                      <button className="quantity-btn minus" onClick={() => updateQuantity(item.id, item.quantity - 1)}>
                        -
                      </button>
                      <input
                        type="number"
                        value={item.quantity}
                        onChange={(e) => updateQuantity(item.id, Number.parseInt(e.target.value) || 1)}
                        className="quantity-input"
                        min="1"
                      />
                      <button className="quantity-btn plus" onClick={() => updateQuantity(item.id, item.quantity + 1)}>
                        +
                      </button>
                    </div>
                  </td>
                  <td className="product-subtotal">
                    <span className="subtotal">{(item.price * item.quantity).toLocaleString("vi-VN")}‚Ç´</span>
                  </td>
                  <td className="product-actions">
                    <button className="remove-btn" onClick={() => removeFromCart(item.id)} title="X√≥a s·∫£n ph·∫©m">
                      √ó
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          <div className="cart-actions">
            <Link to="/" className="continue-shopping-btn">
              ‚Üê Ti·∫øp t·ª•c mua s·∫Øm
            </Link>
            <button className="update-cart-btn">C·∫≠p nh·∫≠t gi·ªè h√†ng</button>
          </div>
        </div>

        <div className="cart-summary">
          <div className="summary-card">
            <h3>T·ªïng gi·ªè h√†ng</h3>

            <div className="summary-row">
              <span>T·∫°m t√≠nh:</span>
              <span>{getSubtotal().toLocaleString("vi-VN")}‚Ç´</span>
            </div>

            <div className="summary-row">
              <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
              <span>
                {getShippingFee() === 0 ? (
                  <span className="free-shipping">Mi·ªÖn ph√≠</span>
                ) : (
                  `${getShippingFee().toLocaleString("vi-VN")}‚Ç´`
                )}
              </span>
            </div>

            {getShippingFee() === 0 && (
              <div className="shipping-note">
                <small>üéâ B·∫°n ƒë∆∞·ª£c mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn!</small>
              </div>
            )}

            <div className="summary-row total-row">
              <strong>
                <span>T·ªïng c·ªông:</span>
                <span>{getFinalTotal().toLocaleString("vi-VN")}‚Ç´</span>
              </strong>
            </div>

            <button className="checkout-btn" onClick={handleProceedToCheckout}>
              CHI TI·∫æT THANH TO√ÅN
            </button>

            <div className="payment-methods">
              <p>Ph∆∞∆°ng th·ª©c thanh to√°n ƒë∆∞·ª£c ch·∫•p nh·∫≠n:</p>
              <div className="payment-icons">
                <span className="payment-icon">üí≥</span>
                <span className="payment-icon">üè¶</span>
                <span className="payment-icon">üì±</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default CartPage